import { generateDocument } from "@/components/Pdf";
import { useFormInput } from "@/hooks/useFormInput";
import styles from "@/styles/Home.module.css";
import { pdf } from "@react-pdf/renderer";
import { saveAs } from "file-saver";
import { Inter } from "next/font/google";
import Head from "next/head";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const sender = useFormInput("");
  const recepient = useFormInput("");
  const transaction = useFormInput("");
  const contactAddres = useFormInput("");
  const serviceFile = useFormInput("");
  const email = useFormInput("");

  const handleSubmit = async () => {
    const pdfFile = await pdf(
      generateDocument({
        sender: sender.value,
        recepient: recepient.value,
        transaction: transaction.value,
        contactAddress: contactAddres.value,
        serviceFile: serviceFile.value,
      })
    ).toBlob();

    const emailContent = {
      to: email.value,
      subject: "BlockServe - Proof Of Service Certificate",
      content: "Attached to this email is the Proof of Service Certificate",
      attachments: [
        {
          content: await blobToBase64(pdfFile),
          type: "application/pdf",
          filename: "ProofOfServiceCertificate.pdf",
        },
      ],
    };

    await fetch("/api/sendmail", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(emailContent),
    });

    saveAs(pdfFile, "document.pdf");
  };

  function blobToBase64(blob: Blob) {
    const reader = new FileReader();
    reader.readAsDataURL(blob);
    return new Promise((resolve) => {
      reader.onloadend = () => {
        resolve(
          (reader.result as string).replace("data:application/pdf;base64,", "")
        );
      };
    });
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div>
          Sender: <input type="text" {...sender} />
        </div>
        <div>
          Recepient: <input type="text" {...recepient} />
        </div>
        <div>
          Transaction: <input type="text" {...transaction} />
        </div>
        <div>
          Contact Address: <input type="text" {...contactAddres} />
        </div>
        <div>
          Service File: <input type="text" {...serviceFile} />
        </div>
        <div>
          E-mail: <input type="text" {...email} />
        </div>
        <div>
          <input type="button" value="download" onClick={handleSubmit} />
        </div>
      </main>
    </>
  );
}
